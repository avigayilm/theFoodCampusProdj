@using theFoodCampus.Models
@model theFoodCampus.Models.Recipe

@{
    ViewData["Title"] = "Create";
}
<div class="col-11 mx-auto pt-0">
    <div class="card">
        <div class="row h-100 align-items-center">
            <div class="col-12">
                <div class="breadcumb-text text-center">
                    <h2>Recipe</h2>
                </div>
            </div>
        </div>

        <form ID="ApplicantForm" enctype="multipart/form-data" asp-action="Edit">
            <input type="hidden" asp-for="Id" /> @*this will hold teh recipe Id that we want to edit*@
            <input type="hidden" asp-for="PhotoUrl" />
            <div class="row">
                <div class=col-md-6>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Kashrut</label>
                    <select asp-for="RKashrut" class="form-control" asp-items="Html.GetEnumSelectList<Kashrut>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="RKashrut" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Difficulty</label>
                    <select asp-for="Rdifficulty" class="form-control" asp-items="Html.GetEnumSelectList<Difficulty>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="Rdifficulty" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Preper Time</label>
                    <select asp-for="RPrepTime" class="form-control" asp-items="Html.GetEnumSelectList<PrepTime>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="RPrepTime" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Holiday</label>
                    <select asp-for="RHoliday" class="form-control" asp-items="Html.GetEnumSelectList<Holiday>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="RHoliday" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Event</label>
                    <select asp-for="REvent" class="form-control" asp-items="Html.GetEnumSelectList<Event>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="REvent" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Weather</label>
                    <select asp-for="RWeather" class="form-control" asp-items="Html.GetEnumSelectList<Weather>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="RWeather" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Type</label>
                    <select asp-for="RType" class="form-control" asp-items="Html.GetEnumSelectList<Category>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="RType" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Diet</label>
                    <select asp-for="RDiet" class="form-control" asp-items="Html.GetEnumSelectList<Diet>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="RDiet" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">Budget</label>
                    <select asp-for="RBudget" class="form-control" asp-items="Html.GetEnumSelectList<Budget>()">
                        <option value="">Choose out of following options</option>
                    </select>
                    <span asp-validation-for="RBudget" class="text-danger"></span>
                </div>
            </div>

            <div class=col-md-6>
                <div asp-validation-summary="ModelOnly" class="text-danger">
                </div>
                <div class="form-group">
                    <label asp-for="Tag" class="control-label"></label>
                    <input asp-for="Tag" class="form-control" />
                    <span asp-validation-for="Tag" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-14">
                    @* <div class="col-md-6 group">*@
                    <div class="hover-text col-md-6">
                        <label class="custome-file-label" for="customFile">Choose File 🖇️</label>
                        <input asp-for="ProfilePhoto" class="custom-file-input" id="customFile"
                               onchange="document.getElementById('PreviewPhoto').src=window.URL.createObjectURL(this.files[0])"
                               placeholder="choose file" />
                        <span class="tooltip-text" id="left">click here to choose a file</span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ProfileUrl" class="control-label" hidden></label>
                        <input asp-for="ProfileUrl" class="form-control" id="customFile" placeholder="https://example.com"
                        pattern="https?://.+[a-z0-9._%+-]+[.jpg/.png]$" title="The link must be in url form. Must be of jpg or png type only!" />
                        <span asp-validation-for="ProfileUrl" class="text-danger"></span>
                    </div>
                </div>
                @*
                <div class="form-group">
                <input asp-for="ProfileUrl" id="customFile"
                placeholder="https://example.com" />
                </div>*@

                <div class="form-group col-4">
                    <img id="PreviewPhoto" src="~/Images/noimage.png" alt="Logo Image"
                         width="200" height="200" style="border:1px; margin-top:20px; " />
                </div>

            </div>

            <div class="col-4"></div>
            <div class="form-group col-12 justify-content-center align middle">
                @if (@Model.PhotoUrl != null)
                {
                    @if (@Model.PhotoUrl.StartsWith("http") == true)
                    {
                        <img src=@Model.PhotoUrl alt="Logo Image"
                     width="200" height="200" style="border:1px; margin-top:20px; " />
                    }
                    else
                    {
                        <img src="~/images/@Model.PhotoUrl" alt="Logo Image"
                     width="200" height="200" style="border:1px; margin-top:20px; " />
                    }
                }
            </div>


            <div class="container col-12 btn-group">
                <div class="container col-6 pl-0 lm-0">

                    <div class="col-md-12 p-0 m-0 bg-light" @*style="height:200px; overflow-y:auto;"*@>
                        <table id="ExpTable" class="table table-sm CodesTable">
                            <thead>
                                <tr>
                                    <th>
                                        Ingredient Name
                                    </th>
                                    <th>
                                        Amount
                                    </th>
                                    <th>
                                        MeasurementType
                                    </th>
                                    <th style="width:75px;">
                                        <button id="btnaddExperiences" type="button" class="btn btn-sm btn-secondary visible"
                                                onclick="AddItem(this)">
                                            Add
                                        </button>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @*@foreach (var item in Model.Experiences)*@
                                @for (int i = 0; i < Model.Ingredients.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @*@Html.EditorFor(x=>x.Experiences[i].CompanyName,new{AddHtmlAttributeValue=new{@class="form-control"}})*@
                                            <input asp-for="@Model.Ingredients[i].Name" class="form-control" />
                                            <span asp-validation-for="@Model.Ingredients[i].Name" class="text-danger"></span>

                                            @*<input asp-for="@item.CompanyName" class="form-control" />*@
                                        </td>
                                        <td>
                                            @*@Html.EditorFor(x=>x.Experiences[i].Designation,new{AddHtmlAttributeValue=new{@class="form-control"}})*@
                                            <input asp-for="@Model.Ingredients[i].Amount" class="form-control" />

                                            @*<input asp-for="@item.Designation" class="form-control" />*@
                                        </td>
                                        <td>
                                            @* <input type="hidden" asp-for="@Model.Ingredients[i].IsDeleted" />*@
                                            @*@Html.EditorFor(x=>x.Experiences[i].YearsWorked,new{AddHtmlAttributeValue=new{@class="form-control"}})*@
                                            <input type="hidden" asp-for="@Model.Ingredients[i].IsDeleted" />
                                            <select asp-for="@Model.Ingredients[i].MeasurementUnit" class="form-control" asp-items="Html.GetEnumSelectList<MeasurementType>()">
                                                <option value="">Choose out of following options</option>
                                            </select>
                                            @*<input asp-for="@item.YearsWorked" class="form-control" />*@
                                        </td>
                                        <td style="width:60px">
                                            @* <button id="btndummy-@i" type="button" class="btn btn-sm invisible">
                                        Dummy
                                        </button>*@

                                            <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger visible"
                                                onclick="DeleteItem(this)">
                                                Delete
                                            </button>

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                @* add empty colum in the middle in order to have space in the middle*@
                <div class="container col-1">
                </div>

                <div class="container col-5">
                    <div class="col-md-12 p-0 m-0 bg-light">
                        <table id="InstructionTable" class="table table-sm CodesTable">
                            <thead>
                                <tr>
                                    <th>
                                        Instruction
                                    </th>
                                    <th style="width:60px">
                                        <button id="btnAddInstruction" type="button" class="btn btn-sm btn-secondary visible"
                                                onclick="AddItem(this)">
                                            Add
                                        </button>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Instructions.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            <input type="hidden" asp-for="@Model.Instructions[i].IsHidden" />
                                            @*<p class="form-control-plaintext">@Model.Instructions[i].Step"</p> *@
                                            <input asp-for="@Model.Instructions[i].Step" class="form-control" />

                                        </td>
                                        <td style="width:60px">
                                            <button id="btnRemoveInst-@i" type="button" class="btn btn-sm btn-danger visible"
                                                onclick="DeleteItem(this)">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>


            @*to fix issue that last column is cloned*@
            @*here we will store the index of the last row*@

            <input type="hidden" id="hdnLastIndex" value="0" />


            <div class="col-12 btn-group p-0 m-0">
                <div class="col-6 form-check-group text-right p-2">
                    <a asp-action="Index" class="btn btn-secondary">&nbsp;Back&nbsp;</a>
                </div>
                <div class="col-6 form-check group text-left p-2">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </form>
    </div>
</div>

@*<div>
    <a asp-action="Index">Back to List</a>
</div>*@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
    <script type="text/javascript">

        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings("custom-file-label").addClass(selected).html(fileName);
        });

        //function CalcTotalExperiences() {
        //    var x = document.getElementsByClassName('YearsWorked');
        //    var totalExp = 0;
        //    var i;
        //    for (i = 0; i < x.length(); i++) {
        //        totalExp = totalExp + eval(x[i].value);
        //    }
        //    document.getElementById('TotalExperience').ariaValueMax = totalExp;
        //    return;
        //}

        //document.addEventListener('change', function (e)
        //{
        //    if (e.target.classList.contains('YearsWorked')) {
        //        CalcTotalExperiences();
        //    }
        //}
        //    , false);


        function DeleteItem(btn) {
            //to prevent user from deleting first row
            var table = document.getElementById('ExpTable');

            if (btn.id.indexOf("Inst") > 0)
                table = document.getElementById('InstructionTable');
            else
                table = document.getElementById('ExpTable');

            var rows = table.getElementsByTagName('tr');
            if (rows.length == 2)// 2 because header is also considered a row
            {
                alert("This row Cannot be Deleted ");
                return;
            }
            var btnIdx = btn.id.replaceAll('btnremove-', '');
            /* var idOfIsDeleted = btnIdx + "__IsDeleted";*/

            if (btn.id.indexOf("Inst") > 0)
                btnIdx = btn.id.replaceAll('btnRemoveInst-', '');

            var idOfIsDeleted = btnIdx + "__IsDeleted";

            if (btn.id.indexOf("Inst") > 0)
                idOfIsDeleted = btnIdx + "__IsHidden";


            var hidIsDelId = document.querySelector("[id$='" + idOfIsDeleted + "']").id;
            document.getElementById(hidIsDelId).value = "true";

            //  $(btn).closest('tr').remove();
            $(btn).closest('tr').hide(); // we dont actually delete the row but it will hide
            CalcTotalExperiences()
        }

        function AddItem(btn) {

            var table = document.getElementById('ExpTable');// we gave the table an id

            if (btn.id == 'btnAddInstruction')
                table = document.getElementById('InstructionTable');
            else
                table = document.getElementById('ExpTable');


            var rows = table.getElementsByTagName('tr'); //we get the rows of the table

            var rowOuterHtml = rows[rows.length - 1].outerHTML; //the last row, but we are clonign last row, whci gives them all same id

            // teh follwing lines save the solution
            var lastrowIdx = rows.length - 2//document.getElementById('hdnLastIndex').value;

            var nextrowIdx = eval(lastrowIdx) + 1;// incrementing the index so that it won't stay by the last row

            //document.getElementById('hdnLastIndex').value = nextrowIdx;

            // rowouterHtml holds the source of the last row of the table
            // so we are replacing the old index with the new index
            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

            // then we attach the new row to the table
            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            //// this will show the add and delete buttons at the right time
            //var btnAddID=btn.id;
            //var btnDeleteid=btnAddID.replace('btnadd', 'btnremove');

            //var delbtn=document.getElementById(btnDeleteid);
            //delbtn.classList.add("visible");
            //delbtn.classList.remove("invisible");

            //var addbtn=document.getElementById(btnAddID);
            //addbtn.classList.remove("visible");
            //addbtn.classList.add("invisible");

            // in order when cloning, that the cloned line is empty
            var x = document.getElementsByTagName("input");

            for (var cnt = 0; cnt < x.length; cnt++) {
                if (x[cnt].type == "text" && x[cnt].id.indexOf('_' + nextRowIdx + '_') > 0)// check if it is a textcontorl
                    x[cnt].value = ' ';
                else if (x[cnt].type == "number" && x[cnt].id.indexOf('_' + nextrowIdx + '_') > 0)// check if it is a textcontorl
                    x[cnt].value = ' ';
            }

            rebindvalidators(); // in order to add validation to dynaimcally added buttons.

        }

        // in order for validation to work on dynamically made fields by javascript
        function rebindvalidators() {
            var $form = $("#ApplicantForm"); // reference of form by id
            $form.unbind();// reomve all contorls
            $form.data("validator", null); // clear all validator
            $.validator.unobtrusive.parse($form);// add validators again
            $form.validate($form.data("unobtrusiveValidation").options); // rebind it to the js ploding
        }

    </script>
    <style>
        .tooltip {
            position: relative;
            display: inline-block;
            border-bottom: 1px dotted black;
        }

            .tooltip .tooltiptext {
                visibility: hidden;
                width: 120px;
                background-color: black;
                color: #fff;
                text-align: center;
                border-radius: 6px;
                padding: 5px 0;
                /* Position the tooltip */
                position: absolute;
                z-index: 1;
            }

            .tooltip:hover .tooltiptext {
                visibility: visible;
            }
    </style>

    <style>
        .tooltip-text {
            visibility: hidden;
            position: absolute;
            z-index: 2;
            width: 100px;
            color: white;
            font-size: 12px;
            background-color: #192733;
            border-radius: 10px;
            padding: 10px 15px 10px 15px;
        }

            .tooltip-text::before {
                content: "";
                position: absolute;
                transform: rotate(45deg);
                background-color: #192733;
                padding: 5px;
                z-index: 1;
            }

        .hover-text:hover .tooltip-text {
            visibility: visible;
        }

        #top {
            top: -40px;
            left: -50%;
        }

            #top::before {
                top: 80%;
                left: 45%;
            }

        #bottom {
            top: 25px;
            left: -50%;
        }

            #bottom::before {
                top: -5%;
                left: 45%;
            }

        #left {
            top: -8px;
            right: 120%;
        }

            #left::before {
                top: 35%;
                left: 94%;
            }

        #right {
            top: -8px;
            left: 120%;
        }

            #right::before {
                top: 35%;
                left: -2%;
            }

        .hover-text {
            position: relative;
            margin: 40px;
            /* font-family: ui-sans-serif; */
            text-align: initial;
        }
    </style>